{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/dist/query/react\";\nimport { instance } from \".\"; // refactor api mutation call\n\nexport const addBlog = async post => {\n  const {\n    data\n  } = await instance.post(\"/blog/addBlog\", post);\n  const {\n    id\n  } = data.data;\n  const {\n    data: blogDetail\n  } = await instance.get(\"/blog/getBlog\", {\n    params: {\n      id\n    }\n  });\n  return blogDetail.data;\n};\nexport const getPostByUserId = async uId => {\n  const {\n    data\n  } = await instance.get(\"/blog/getBlog\", {\n    params: {\n      uId\n    }\n  });\n  return data.data;\n};\nexport const updateBlog = async (id, ipfsUrl) => {\n  const {\n    data\n  } = await instance.post(\"/blog/updateBlog\", {\n    id,\n    ipfsUrl\n  });\n  return data.data;\n};\nexport const postApi = createApi({\n  reducerPath: \"blogApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://wengyifan.com:8080/\" + \"blog/\"\n  }),\n  endpoints: builder => ({\n    getPosts: builder.query({\n      query: id => {\n        return {\n          url: `getBlog`,\n          params: {\n            id\n          }\n        };\n      }\n    }),\n    addPost: builder.mutation({\n      query: post => {\n        return {\n          url: `addBlog/`,\n          method: \"POST\",\n          body: post\n        };\n      }\n    })\n  })\n});\nexport const {\n  useGetPostsQuery,\n  useAddPostMutation\n} = postApi;","map":{"version":3,"sources":["/Users/wengyifan/Desktop/dsdn/dsdn/src/service/postService.js"],"names":["createApi","fetchBaseQuery","instance","addBlog","post","data","id","blogDetail","get","params","getPostByUserId","uId","updateBlog","ipfsUrl","postApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getPosts","query","url","addPost","mutation","method","body","useGetPostsQuery","useAddPostMutation"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,mCAA1C;AACA,SAASC,QAAT,QAAyB,GAAzB,C,CAEA;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAOC,IAAP,IAAgB;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMH,QAAQ,CAACE,IAAT,CAAc,eAAd,EAA+BA,IAA/B,CAAvB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAASD,IAAI,CAACA,IAApB;AAEA,QAAM;AAAEA,IAAAA,IAAI,EAAEE;AAAR,MAAuB,MAAML,QAAQ,CAACM,GAAT,CAAa,eAAb,EAA8B;AAC/DC,IAAAA,MAAM,EAAE;AACNH,MAAAA;AADM;AADuD,GAA9B,CAAnC;AAKA,SAAOC,UAAU,CAACF,IAAlB;AACD,CAVM;AAYP,OAAO,MAAMK,eAAe,GAAG,MAAOC,GAAP,IAAe;AAC5C,QAAM;AAAEN,IAAAA;AAAF,MAAW,MAAMH,QAAQ,CAACM,GAAT,CAAa,eAAb,EAA8B;AACnDC,IAAAA,MAAM,EAAE;AACNE,MAAAA;AADM;AAD2C,GAA9B,CAAvB;AAKA,SAAON,IAAI,CAACA,IAAZ;AACD,CAPM;AASP,OAAO,MAAMO,UAAU,GAAG,OAAON,EAAP,EAAWO,OAAX,KAAuB;AAC/C,QAAM;AAAER,IAAAA;AAAF,MAAW,MAAMH,QAAQ,CAACE,IAAT,CAAc,kBAAd,EAAkC;AACvDE,IAAAA,EADuD;AAEvDO,IAAAA;AAFuD,GAAlC,CAAvB;AAIA,SAAOR,IAAI,CAACA,IAAZ;AACD,CANM;AAQP,OAAO,MAAMS,OAAO,GAAGd,SAAS,CAAC;AAC/Be,EAAAA,WAAW,EAAE,SADkB;AAE/BC,EAAAA,SAAS,EAAEf,cAAc,CAAC;AACxBgB,IAAAA,OAAO,EAAE,+BAA+B;AADhB,GAAD,CAFM;AAK/BC,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACvBC,IAAAA,QAAQ,EAAED,OAAO,CAACE,KAAR,CAAc;AACtBA,MAAAA,KAAK,EAAGf,EAAD,IAAQ;AACb,eAAO;AACLgB,UAAAA,GAAG,EAAG,SADD;AAELb,UAAAA,MAAM,EAAE;AAAEH,YAAAA;AAAF;AAFH,SAAP;AAID;AANqB,KAAd,CADa;AASvBiB,IAAAA,OAAO,EAAEJ,OAAO,CAACK,QAAR,CAAiB;AACxBH,MAAAA,KAAK,EAAGjB,IAAD,IAAU;AACf,eAAO;AACLkB,UAAAA,GAAG,EAAG,UADD;AAELG,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,IAAI,EAAEtB;AAHD,SAAP;AAKD;AAPuB,KAAjB;AATc,GAAd;AALoB,CAAD,CAAzB;AA0BP,OAAO,MAAM;AAAEuB,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,IAA2Cd,OAAjD","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/dist/query/react\";\nimport { instance } from \".\";\n\n// refactor api mutation call\n\nexport const addBlog = async (post) => {\n  const { data } = await instance.post(\"/blog/addBlog\", post);\n  const { id } = data.data;\n\n  const { data: blogDetail } = await instance.get(\"/blog/getBlog\", {\n    params: {\n      id,\n    },\n  });\n  return blogDetail.data;\n};\n\nexport const getPostByUserId = async (uId) => {\n  const { data } = await instance.get(\"/blog/getBlog\", {\n    params: {\n      uId,\n    },\n  });\n  return data.data;\n};\n\nexport const updateBlog = async (id, ipfsUrl) => {\n  const { data } = await instance.post(\"/blog/updateBlog\", {\n    id,\n    ipfsUrl,\n  });\n  return data.data;\n};\n\nexport const postApi = createApi({\n  reducerPath: \"blogApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://wengyifan.com:8080/\" + \"blog/\",\n  }),\n  endpoints: (builder) => ({\n    getPosts: builder.query({\n      query: (id) => {\n        return {\n          url: `getBlog`,\n          params: { id },\n        };\n      },\n    }),\n    addPost: builder.mutation({\n      query: (post) => {\n        return {\n          url: `addBlog/`,\n          method: \"POST\",\n          body: post,\n        };\n      },\n    }),\n  }),\n});\n\nexport const { useGetPostsQuery, useAddPostMutation } = postApi;\n"]},"metadata":{},"sourceType":"module"}